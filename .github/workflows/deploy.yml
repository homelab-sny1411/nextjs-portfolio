name: Build and Deploy Portfolio

on:
  push:
    branches: [main]

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install OpenVPN and Network Tools
        run: |
          sudo apt update
          sudo apt install -y openvpn resolvconf bridge-utils isc-dhcp-client net-tools

      - name: Display Network Info Before VPN
        run: |
          echo "IP avant connexion VPN:"
          curl -s ifconfig.me
          echo "Routes avant VPN:"
          ip route list
          echo "Interfaces réseau avant VPN:"
          ip addr show

      - name: Setup VPN config
        run: |
          echo "${{ secrets.OVPN_CONFIG }}" > config.ovpn
          echo "${{ secrets.OVPN_USERNAME }}" > auth.txt
          echo "${{ secrets.OVPN_PASSWORD }}" >> auth.txt
          sudo chmod 600 config.ovpn auth.txt

      - name: Connect to VPN with Debug
        run: |
          # Démarrer OpenVPN avec logging
          sudo openvpn --config config.ovpn --auth-user-pass auth.txt --daemon --log vpn.log --verb 4
          
          # Attendre et vérifier le statut
          for i in {1..12}; do
            if ip addr show tap0 > /dev/null 2>&1; then
              echo "Interface VPN détectée!"
              break
            fi
            echo "Attente de l'interface VPN... ($i/12)"
            sleep 5
          done
          
          # Afficher les logs VPN
          echo "=== Logs OpenVPN ==="
          sudo cat vpn.log
          
          # Vérifier si l'interface existe et la configurer
          if ip addr show tap0 > /dev/null 2>&1; then
            echo "Configuration de l'interface tap0..."
            sudo ip link set tap0 up
            sudo dhclient tap0 || {
              echo "DHCP failed, trying static configuration..."
              sudo ip addr add 192.168.1.100/24 dev tap0
              sudo ip route add 192.168.1.0/24 dev tap0
            }
          else
            echo "Échec de la création de l'interface VPN"
            exit 1
          fi

      - name: Display Network Info After VPN
        run: |
          echo "IP après connexion VPN:"
          curl -s ifconfig.me
          echo "Routes après VPN:"
          ip route list
          echo "Interfaces réseau après VPN:"
          ip addr show
          echo "Status interface tap0:"
          ip addr show tap0 || echo "Interface tap0 non trouvée"
          echo "Test de connexion locale:"
          ping -c 4 192.168.1.17 || echo "Ping failed"

      - name: Check VPN Connection
        run: |
          echo "Test de connexion au serveur Nomad:"
          curl -v http://192.168.1.17:4646 || exit 1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:latest

      - name: Deploy to Nomad
        env:
          NOMAD_ADDR: http://192.168.1.17:4646
        run: |
          curl -L -o nomad.zip https://releases.hashicorp.com/nomad/1.9.5/nomad_1.9.5_linux_amd64.zip
          unzip nomad.zip
          ./nomad job run -var="image=ghcr.io/${{ github.repository }}:latest" portfolio.nomad

      - name: Cleanup VPN
        if: always()
        run: |
          sudo dhclient -r tap0 || true
          sudo pkill openvpn || true
          rm -f config.ovpn auth.txt vpn.log