name: Build and Deploy Portfolio

on:
  push:
    branches: [main]

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install OpenVPN and Network Tools
        run: |
          sudo apt update
          sudo apt install -y openvpn resolvconf bridge-utils isc-dhcp-client net-tools traceroute

      - name: Setup VPN config
        run: |
          echo "${{ secrets.OVPN_CONFIG }}" > config.ovpn
          echo "${{ secrets.OVPN_USERNAME }}" > auth.txt
          echo "${{ secrets.OVPN_PASSWORD }}" >> auth.txt
          sudo chmod 600 config.ovpn auth.txt

      - name: Connect to VPN and Configure Network
        run: |
          echo "=== Configuration initiale ==="
          ip route list
          ip addr show
          
          echo "=== Démarrage OpenVPN ==="
          # Démarrer OpenVPN en premier plan pour voir les logs directement
          sudo openvpn --config config.ovpn --auth-user-pass auth.txt --log-append /dev/stdout &
          OPENVPN_PID=$!
          
          echo "=== Attente de l'interface TAP ==="
          for i in {1..30}; do
            if ip link show tap0 >/dev/null 2>&1; then
              echo "Interface TAP détectée!"
              break
            fi
            echo "Attente de l'interface tap0... $i/30"
            sleep 2
          done
          
          echo "=== Configuration de l'interface ==="
          sudo ip link set tap0 up
          sudo ip addr add 192.168.1.100/24 dev tap0
          
          echo "=== Configuration des routes ==="
          # Ajouter la route vers le réseau local
          sudo ip route add 192.168.1.0/24 dev tap0
          # S'assurer que le trafic vers Nomad passe par le VPN
          sudo ip route add 192.168.1.17/32 dev tap0
          
          echo "=== Status des interfaces ==="
          ip addr show
          
          echo "=== Table de routage ==="
          ip route list
          
          echo "=== Test de connectivité ==="
          ping -c 2 192.168.1.17 || echo "Ping failed"
          traceroute 192.168.1.17 || echo "Traceroute failed"
          
          echo "=== Processus réseau actifs ==="
          netstat -rn
          ps aux | grep openvpn
          
          # Vérifier si OpenVPN est toujours en cours d'exécution
          if ! kill -0 $OPENVPN_PID 2>/dev/null; then
            echo "OpenVPN process died"
            exit 1
          fi

      - name: Check VPN Connection
        run: |
          echo "Test de connexion au serveur Nomad:"
          curl -v --connect-timeout 10 http://192.168.1.17:4646 || exit 1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:latest

      - name: Deploy to Nomad
        env:
          NOMAD_ADDR: http://192.168.1.17:4646
        run: |
          curl -L -o nomad.zip https://releases.hashicorp.com/nomad/1.9.5/nomad_1.9.5_linux_amd64.zip
          unzip nomad.zip
          ./nomad job run -var="image=ghcr.io/${{ github.repository }}:latest" portfolio.nomad

      - name: Cleanup VPN
        if: always()
        run: |
          sudo ip route del 192.168.1.0/24 dev tap0 || true
          sudo pkill openvpn || true
          rm -f config.ovpn auth.txt