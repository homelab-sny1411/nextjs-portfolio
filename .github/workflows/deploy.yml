name: Build and Deploy Portfolio

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install OpenVPN and Network Tools
        run: |
          sudo apt update
          sudo apt install -y openvpn resolvconf bridge-utils net-tools

      - name: Setup VPN config
        run: |
          echo "${{ secrets.OVPN_CONFIG }}" > config.ovpn
          echo "${{ secrets.OVPN_USERNAME }}" > auth.txt
          echo "${{ secrets.OVPN_PASSWORD }}" >> auth.txt
          sudo chmod 600 config.ovpn auth.txt

      - name: Connect to VPN
        run: |
          sudo openvpn --config config.ovpn --auth-user-pass auth.txt --daemon
          # Attendre que la connexion soit établie
          sleep 30
          # Vérifier que la connexion est active
          ip addr show tun0

      - name: Test VPN Connection
        run: |
          echo "=== Interface réseau ==="
          ip addr
          echo "=== Table de routage ==="
          ip route
          echo "=== Test Nomad ==="
          curl -v http://192.168.1.17:4646

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:latest

      - name: Deploy to Nomad
        env:
          NOMAD_ADDR: http://192.168.1.17:4646
        run: |
          curl -L -o nomad.zip https://releases.hashicorp.com/nomad/1.9.5/nomad_1.9.5_linux_amd64.zip
          unzip nomad.zip
          ./nomad job run -var="image=ghcr.io/${{ github.repository }}:latest" portfolio.nomad

      - name: Cleanup VPN
        if: always()
        run: |
          # Restaurer la route par défaut originale si présente
          sudo ip route add default via 10.1.0.1 dev eth0 || true
          sudo pkill openvpn || true
          rm -f config.ovpn auth.txt
